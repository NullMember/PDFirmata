#N canvas 377 52 614 619 12;
#X text 49 519 see also:;
#N canvas 164 72 429 150 help-append-template1 0;
#X obj 18 81 filledpolygon z z 0 0 0 20 0 20 30 0 30;
#X obj 60 21 struct help-append-template1 float x float y float z;
#X restore 373 539 pd help-append-template1;
#X obj 50 543 get;
#X obj 82 543 set;
#X obj 182 543 getsize;
#X obj 249 543 setsize;
#X obj 252 568 element;
#X obj 117 568 scalar;
#N canvas 2 79 280 167 help-append-data 1;
#X restore 373 517 pd help-append-data;
#X obj 217 264 pointer;
#X obj 21 10 append;
#X text 75 9 -- add item to a list;
#X msg 217 240 traverse pd-help-append-data \, bang;
#X obj 39 304 append help-append-template1 x y z;
#X floatatom 39 255 5 0 0 0 - - -, f 5;
#X obj 39 275 t f f;
#X msg 359 295 \; pd-help-append-data clear;
#X text 27 28 "append" maintains a pointer to a scalar \, or else an
empty pointer to the head of a list. You may set the pointer using
the leftmost inlet. The creation arguments specify the template of
a new scalar to append \, and the names of the fields (there should
be at least one) you will wish to initialize. To append an object \,
send a number to the leftmost inlet. "Append"'s pointer is updated
to point to the new scalar \, and the new pointer is also output.;
#X obj 115 543 pointer;
#X text 39 235 click this first->;
#X text 235 219 go to (and output) "head" of the list;
#X obj 175 568 struct;
#X text 358 574 updated for Pd version 0.47;
#X obj 311 441 pointer;
#X msg 311 417 traverse pd-help-append-data \, bang;
#X floatatom 56 389 5 0 0 0 - - -, f 5;
#X obj 55 463 append;
#X msg 70 416 set help-append-template1 x;
#X text 24 161 To insert to the beginning of a list \, you can append
to the "head" of the list.;
#X text 31 347 if there is no more than one field \, you can use a
"set" message to set the template and field:;
#X connect 9 0 13 3;
#X connect 12 0 9 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 15 1 13 1;
#X connect 15 1 13 2;
#X connect 23 0 26 1;
#X connect 24 0 23 0;
#X connect 25 0 26 0;
#X connect 27 0 26 0;
